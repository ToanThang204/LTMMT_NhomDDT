@* Views/Lop/Index.cshtml *@
@model IEnumerable<DoAnMangMayTinh.Models.Lop>
@{
    ViewData["Title"] = "Danh sách lớp";
}

<style>
    .alternative-page-bg {
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 30px 0;
    }

    .alternative-header {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(15px);
        border-radius: 25px;
        padding: 35px;
        margin-bottom: 25px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

    .alternative-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb, #f5576c);
    }

    .alternative-title {
        color: #fff;
        font-weight: 800;
        font-size: 3rem;
        margin-bottom: 15px;
        text-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        letter-spacing: 1px;
    }

    .alternative-subtitle {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1.2rem;
        margin-bottom: 0;
        font-weight: 500;
    }

    .alternative-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        border-radius: 20px;
        padding: 15px 35px;
        color: white;
        font-weight: 700;
        font-size: 1.1rem;
        transition: all 0.4s ease;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        position: relative;
        overflow: hidden;
    }

    .alternative-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
        transition: left 0.5s;
    }

    .alternative-btn:hover::before {
        left: 100%;
    }

    .alternative-btn:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 12px 35px rgba(102, 126, 234, 0.6);
        color: white;
    }

    .alternative-card {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 25px;
        padding: 35px;
        margin-bottom: 25px;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(15px);
        transition: all 0.4s ease;
        position: relative;
        overflow: hidden;
    }

    .alternative-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
    }

    .alternative-card:hover {
        transform: translateY(-8px) rotateX(5deg);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    }

    .alternative-table {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 25px;
        overflow: hidden;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(15px);
    }

    .alternative-table thead {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .alternative-table th {
        border: none;
        padding: 25px 20px;
        font-weight: 700;
        font-size: 1.2rem;
        text-align: center;
        letter-spacing: 0.5px;
    }

    .alternative-table td {
        border: none;
        padding: 25px 20px;
        text-align: center;
        vertical-align: middle;
        border-bottom: 2px solid rgba(0, 0, 0, 0.05);
        font-weight: 500;
    }

    .alternative-table tbody tr {
        transition: all 0.4s ease;
        position: relative;
    }

    .alternative-table tbody tr:hover {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
        transform: scale(1.02) translateX(5px);
    }

    .alternative-action-btn {
        padding: 10px 20px;
        border-radius: 15px;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.95rem;
        margin: 0 8px;
        transition: all 0.4s ease;
        display: inline-block;
        position: relative;
        overflow: hidden;
    }

    .btn-details-alt {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .btn-edit-alt {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(240, 147, 251, 0.4);
    }

    .btn-delete-alt {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
    }

    .alternative-action-btn:hover {
        transform: translateY(-3px) scale(1.1);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        color: white;
        text-decoration: none;
    }

    .alternative-empty-state {
        text-align: center;
        padding: 80px 20px;
        color: #6c757d;
    }

    .alternative-empty-state i {
        font-size: 5rem;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 25px;
    }

    .alternative-stats-card {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 20px;
        padding: 30px;
        text-align: center;
        margin-bottom: 25px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        position: relative;
        overflow: hidden;
        transition: all 0.4s ease;
    }

    .alternative-stats-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
    }

    .alternative-stats-card:hover {
        transform: translateY(-5px) rotateY(5deg);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .alternative-stats-number {
        font-size: 3rem;
        font-weight: 800;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 10px;
    }

    .alternative-stats-label {
        color: #495057;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .floating-animation {
        animation: float 3s ease-in-out infinite;
    }

    keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    .pulse-animation {
        animation: pulse 2s ease-in-out infinite;
    }

    keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
</style>

<div class="alternative-page-bg">
    <div class="container">
        <!-- Header Section -->
        <div class="alternative-header floating-animation">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="alternative-title">
                        <i class="fas fa-users me-4"></i>
                        Danh sách lớp
                    </h1>
                    <p class="alternative-subtitle">
                        Quản lý và theo dõi thông tin các lớp học một cách hiệu quả
                    </p>
                </div>
                <div class="col-md-4 text-end">
                    @if (User.IsInRole("admin"))
                    {
                        <a asp-action="Create" class="alternative-btn pulse-animation">
                            <i class="fas fa-plus me-2"></i>
                            Thêm lớp mới
                        </a>
                    }
                </div>
            </div>
        </div>

        <!-- Stats Section -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="alternative-stats-card">
                    <div class="alternative-stats-number">@Model.Count()</div>
                    <div class="alternative-stats-label">Tổng số lớp</div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="alternative-stats-card">
                    <div class="alternative-stats-number">
                        <i class="fas fa-graduation-cap"></i>
                    </div>
                    <div class="alternative-stats-label">Hệ thống quản lý</div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="alternative-stats-card">
                    <div class="alternative-stats-number">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="alternative-stats-label">Thống kê chi tiết</div>
                </div>
            </div>
        </div>

        <!-- Table Section -->
        <div class="alternative-card">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table alternative-table">
                        <thead>
                            <tr>
                                <th>
                                    <i class="fas fa-hashtag me-2"></i>
                                    Mã lớp
                                </th>
                                <th>
                                    <i class="fas fa-user-graduate me-2"></i>
                                    Tên lớp
                                </th>
                                <th>
                                    <i class="fas fa-cogs me-2"></i>
                                    Thao tác
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <strong style="font-size: 1.1rem;">@item.MaLop</strong>
                                    </td>
                                    <td style="font-size: 1.1rem;">@item.TenLop</td>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.MaLop" class="alternative-action-btn btn-details-alt">
                                            <i class="fas fa-eye me-1"></i>
                                            Chi tiết
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.MaLop" class="alternative-action-btn btn-edit-alt">
                                            <i class="fas fa-edit me-1"></i>
                                            Sửa
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.MaLop" class="alternative-action-btn btn-delete-alt">
                                            <i class="fas fa-trash me-1"></i>
                                            Xóa
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alternative-empty-state">
                    <i class="fas fa-users"></i>
                    <h3 style="color: #495057; margin-bottom: 15px;">Chưa có lớp nào</h3>
                    <p style="font-size: 1.1rem; margin-bottom: 25px;">Bắt đầu bằng cách thêm lớp đầu tiên vào hệ thống</p>
                    @if (User.IsInRole("admin"))
                    {
                        <a asp-action="Create" class="alternative-btn">
                            <i class="fas fa-plus me-2"></i>
                            Thêm lớp đầu tiên
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Enhanced animations
        document.addEventListener('DOMContentLoaded', function() {
            // Animate stats numbers with bounce effect
            const statsNumbers = document.querySelectorAll('.alternative-stats-number');
            statsNumbers.forEach(number => {
                if (!isNaN(parseInt(number.textContent))) {
                    const target = parseInt(number.textContent);
                    let current = 0;
                    const increment = target / 25;
                    
                    const updateNumber = () => {
                        if (current < target) {
                            current += increment;
                            number.textContent = Math.ceil(current);
                            number.style.transform = 'scale(1.1)';
                            setTimeout(() => {
                                number.style.transform = 'scale(1)';
                            }, 100);
                            setTimeout(updateNumber, 80);
                        } else {
                            number.textContent = target;
                        }
                    };
                    
                    updateNumber();
                }
            });

            // Enhanced hover effects for table rows
            const tableRows = document.querySelectorAll('.alternative-table tbody tr');
            tableRows.forEach((row, index) => {
                row.style.animationDelay = `${index * 0.1}s`;
                
                row.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.03) translateX(8px)';
                    this.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.2)';
                });
                
                row.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1) translateX(0)';
                    this.style.boxShadow = 'none';
                });
            });

            // Add ripple effect to buttons
            const buttons = document.querySelectorAll('.alternative-btn, .alternative-action-btn');
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.width = ripple.style.height = size + 'px';
                    ripple.style.left = x + 'px';
                    ripple.style.top = y + 'px';
                    ripple.classList.add('ripple');
                    
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });
    </script>
}