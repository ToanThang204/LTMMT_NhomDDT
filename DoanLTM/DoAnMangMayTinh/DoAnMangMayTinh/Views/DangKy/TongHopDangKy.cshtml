@model IEnumerable<DoAnMangMayTinh.Models.DangKy>

<style>
    .summary-page-bg {
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 30px 0;
    }

    .summary-header {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(15px);
        border-radius: 25px;
        padding: 35px;
        margin-bottom: 30px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

    .summary-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb, #f5576c);
    }

    .summary-title {
        color: #ffffff;
        font-weight: 800;
        font-size: 3rem;
        margin-bottom: 15px;
        text-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
        letter-spacing: 1px;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
    }

    .summary-subtitle {
        color: #ffffff;
        font-size: 1.2rem;
        margin-bottom: 0;
        font-weight: 600;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
    }

    .summary-card {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 25px;
        padding: 35px;
        margin-bottom: 25px;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(15px);
        transition: all 0.4s ease;
        position: relative;
        overflow: hidden;
    }

    .summary-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
    }

    .summary-card:hover {
        transform: translateY(-8px) rotateX(5deg);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    }

    .summary-table {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 25px;
        overflow: hidden;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(15px);
    }

    .summary-table thead {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .summary-table th {
        border: none;
        padding: 25px 20px;
        font-weight: 800;
        font-size: 1.3rem;
        text-align: center;
        letter-spacing: 0.5px;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .summary-table td {
        border: none;
        padding: 25px 20px;
        text-align: center;
        vertical-align: middle;
        border-bottom: 2px solid rgba(0, 0, 0, 0.05);
        font-weight: 600;
    }

    .summary-table tbody tr {
        transition: all 0.4s ease;
        position: relative;
    }

    .summary-table tbody tr:hover {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
        transform: scale(1.02) translateX(5px);
    }

    .summary-filter {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 25px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(15px);
    }

    .summary-filter select {
        border: 2px solid rgba(102, 126, 234, 0.3);
        border-radius: 15px;
        padding: 12px 20px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }

    .summary-filter select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        outline: none;
    }

    .summary-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        border-radius: 15px;
        padding: 12px 30px;
        color: white;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .summary-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
        color: white;
    }

    .floating-animation {
        animation: float 3s ease-in-out infinite;
    }

    keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    .pulse-animation {
        animation: pulse 2s ease-in-out infinite;
    }

    .keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }

    .summary-student {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-block;
    }

    .summary-class {
        background: linear-gradient(135deg, #4ecdc4, #44a08d);
        color: white;
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.8rem;
        display: inline-block;
    }

    .summary-subject {
        background: linear-gradient(135deg, #f093fb, #f5576c);
        color: white;
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.8rem;
        display: inline-block;
    }

    .summary-date {
        font-weight: 700;
        color: #2c3e50;
        font-size: 1.1rem;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .summary-time {
        font-weight: 700;
        color: #2c3e50;
        font-size: 1.1rem;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .summary-room {
        background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        color: white;
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.8rem;
        display: inline-block;
    }
</style>

<div class="summary-page-bg">
    <div class="container">
        <!-- Header Section -->
        <div class="summary-header floating-animation">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="summary-title">
                        <i class="fas fa-clipboard-list me-4"></i>
                        Tổng hợp đăng ký thi
                    </h1>
                    <p class="summary-subtitle">
                        Quản lý và theo dõi tất cả đăng ký thi của sinh viên
                    </p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex justify-content-end">
                        <div class="text-white me-3">
                            <div class="fw-bold" style="font-size: 2rem; text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);">@Model.Count()</div>
                            <small style="font-weight: 600; text-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);">Đăng ký</small>
                        </div>
                        <div class="text-white">
                            <div class="fw-bold" style="font-size: 2rem; text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);">@Model.Select(d => d.SinhVien?.Lop?.TenLop).Distinct().Count()</div>
                            <small style="font-weight: 600; text-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);">Lớp</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="summary-filter">
            <form method="get" class="row align-items-end">
                <div class="col-md-4 mb-3">
                    <label class="form-label fw-bold text-dark mb-2" style="color: #2c3e50; text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);">
                        <i class="fas fa-book me-2"></i>
                        Lọc theo môn
                    </label>
                    @Html.DropDownList("monId", (SelectList)ViewBag.MonThiList, "Lọc theo môn", new { @class = "form-control summary-filter-select" })
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label fw-bold text-dark mb-2" style="color: #2c3e50; text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);">
                        <i class="fas fa-user me-2"></i>
                        Lọc theo sinh viên
                    </label>
                    @Html.DropDownList("svId", (SelectList)ViewBag.SinhVienList, "Lọc theo sinh viên", new { @class = "form-control summary-filter-select" })
                </div>
                <div class="col-md-4 mb-3">
                    <button type="submit" class="summary-btn pulse-animation">
                        <i class="fas fa-filter me-2"></i>
                        Lọc
                    </button>
                </div>
            </form>
        </div>

        <!-- Table Section -->
        <div class="summary-card">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table summary-table">
                        <thead>
                            <tr>
                                <th>
                                    <i class="fas fa-user me-2"></i>
                                    Sinh viên
                                </th>
                                <th>
                                    <i class="fas fa-users me-2"></i>
                                    Lớp
                                </th>
                                <th>
                                    <i class="fas fa-book me-2"></i>
                                    Môn thi
                                </th>
                                <th>
                                    <i class="fas fa-calendar me-2"></i>
                                    Ngày thi
                                </th>
                                <th>
                                    <i class="fas fa-clock me-2"></i>
                                    Giờ thi
                                </th>
                                <th>
                                    <i class="fas fa-door-open me-2"></i>
                                    Phòng
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <span class="summary-student">@item.SinhVien?.HoTen</span>
                                    </td>
                                    <td>
                                        <span class="summary-class">@item.SinhVien?.Lop?.TenLop</span>
                                    </td>
                                    <td>
                                        <span class="summary-subject">@item.LichThi?.MonThi?.TenMon</span>
                                    </td>
                                    <td>
                                        <span class="summary-date">
                                            <i class="fas fa-calendar me-1 text-primary"></i>
                                            @item.LichThi?.NgayThi.ToString("dd/MM/yyyy")
                                        </span>
                                    </td>
                                    <td>
                                        <span class="summary-time">
                                            <i class="fas fa-clock me-1 text-warning"></i>
                                            @item.LichThi?.GioThi.ToString(@"hh\:mm")
                                        </span>
                                    </td>
                                    <td>
                                        <span class="summary-room">@item.LichThi?.PhongThi?.TenPhong</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-clipboard-list" style="font-size: 5rem; color: #34495e; margin-bottom: 20px; text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);"></i>
                    <h3 style="color: #2c3e50; margin-bottom: 15px; font-weight: 700; text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">Chưa có đăng ký nào</h3>
                    <p style="font-size: 1.2rem; color: #34495e; margin-bottom: 25px; font-weight: 500; text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);">Chưa có sinh viên nào đăng ký thi</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        // Enhanced animations
        document.addEventListener('DOMContentLoaded', function() {
            // Enhanced hover effects for table rows
            const tableRows = document.querySelectorAll('.summary-table tbody tr');
            tableRows.forEach((row, index) => {
                row.style.animationDelay = `${index * 0.1}s`;
                
                row.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.03) translateX(8px)';
                    this.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.2)';
                });
                
                row.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1) translateX(0)';
                    this.style.boxShadow = 'none';
                });
            });

            // Add ripple effect to buttons
            const buttons = document.querySelectorAll('.summary-btn');
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.width = ripple.style.height = size + 'px';
                    ripple.style.left = x + 'px';
                    ripple.style.top = y + 'px';
                    ripple.classList.add('ripple');
                    
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });

        // SignalR connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/tonghopDangKyHub")
            .build();

        connection.on("RefreshTongHopDangKy", () => {
            location.reload();
        });

        connection.start().catch(err => console.error(err.toString()));
    </script>
}
